{"remainingRequest":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jungwonshin/Downloads/git-and-tonic-project/src/components/analytics.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/src/components/analytics.vue","mtime":1552400976000},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/vuetify-loader/lib/loader.js","mtime":1539688874000},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/cache-loader/dist/cjs.js","mtime":1593141034110},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nh1 {\n    display: block;\n    padding: 2%;\n}\n\n.category {\n    display: block;\n}\n\n.progress {\n    width: 90%;\n    display: block;\n    height: 40px;\n    background-color: lightgray;\n    margin-left: auto;\n    margin-right: auto;\n    border-radius: 75px;\n}\n.barText {\n    position: relative;\n    z-index: 1;\n    top: -35px;\n}\n#vd {\n    width: 10%;\n    height:40px;\n    background-color: green;\n}\n.greenBar {\n    border-radius: 75px;\n    background-image: linear-gradient(to right, lightblue, blue);\n    max-width: 100%;\n}\n.redBar {\n    border-radius: 75px;\n    background-image: linear-gradient(to right, pink, red);\n    max-width: 100%;\n}\n.centername {\n  text-align: center;\n}\n#header{\n  font-size: 20px;\n  text-align: center;\n}\n#selectedmonth {\n    width: 75%;\n    padding-left: 100px;\n}\n",{"version":3,"sources":["analytics.vue"],"names":[],"mappingsgmBA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"analytics.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div id=\"app\">\n    <v-app>\n        <v-content>\n        <v-container>\n        <v-layout row class=\"mt-3\">\n          <v-flex xs12 sm6 offset-sm3>\n            <v-card white>\n                <v-toolbar color=\"white\">\n                <!-- <v-toolbar-side-icon></v-toolbar-side-icon> -->\n                <v-flex class=\"centername\">\n                <v-toolbar-title id=\"appname\" class=\"headline\">Tracker</v-toolbar-title>\n                </v-flex>\n              </v-toolbar>\n              <v-toolbar color=\"blue darken-4\">\n                <v-flex class=\"centername\">\n                <v-toolbar-title class=\"headline white--text\">{{day}}, {{month}} {{date}}{{ord}}</v-toolbar-title>\n                \n                </v-flex>\n              </v-toolbar>\n              <v-divider></v-divider>\n\n                      <v-subheader id=\"header\">Select a Month to see Analytics \n                           </v-subheader>\n        \n    <v-flex>\n        <v-select\n          :items=\"month_items\"\n          label=\"Month\"\n          v-model=\"selectedmonth\"\n          v-on:change=\"showbars(selectedmonth)\"\n        ></v-select>\n      </v-flex>\n          <v-flex>\n        <!-- <v-btn  id=\"submit_button\"  color=\"blue darken-4\" slot=\"activator\" dark>Submit</v-btn> -->\n   </v-flex>\n    <div id=\"analytics\">\n    \n\n        <!-- <div class=\"progress\">\n            <div id=\"vd\"></div>\n            </div>\n        \n        <v-progress-linear value=\"41.66666666666667\" color=\"blue-grey\"></v-progress-linear>\n        \n                <v-bottom-nav>\n      <v-btn :to=\"{name: 'main'}\">\n        <span>Home</span>\n        <v-icon>home</v-icon>\n      </v-btn>\n      \n      <v-btn :to=\"{name: 'page1'}\">\n        <span>Tasks</span>\n        <v-icon>add</v-icon>\n      </v-btn>\n \n      <v-btn :to=\"{name: 'spending'}\">\n        <span>Spending</span>\n        <v-icon>attach_money</v-icon>\n      </v-btn>\n\n      <v-btn :to=\"{name: 'analytics'}\">\n        <span>Analytics</span>\n        <v-icon>bar_chart</v-icon>\n      </v-btn>\n    </v-bottom-nav>\n        <v-progress-linear  v-model=\"academic\" color=\"blue-grey\"></v-progress-linear>\n       \n       \n        <v-progress-linear  v-model=\"money\" color=\"blue-grey\"></v-progress-linear>\n         <v-progress-linear  v-model=\"medicine\" color=\"blue-grey\"></v-progress-linear>\n         -->\n\n        \n        </div>  \n        <v-bottom-nav>\n      <v-btn :to=\"{name: 'main'}\">\n        <span>Home</span>\n        <v-icon>home</v-icon>\n      </v-btn>\n      \n      <v-btn :to=\"{name: 'page1'}\">\n        <span>Tasks</span>\n        <v-icon>add</v-icon>\n      </v-btn>\n \n      <v-btn :to=\"{name: 'spending'}\">\n        <span>Spending</span>\n        <v-icon>attach_money</v-icon>\n      </v-btn>\n\n      <v-btn :to=\"{name: 'analytics'}\">\n        <span>Analytics</span>\n        <v-icon>bar_chart</v-icon>\n      </v-btn>\n    </v-bottom-nav>\n       </v-card>\n       \n     </v-flex>\n    </v-layout>\n    \n    \n</v-container>\n\n\n    </v-content>\n    </v-app>\n    </div>\n</template>\n\n<script>\nimport Vue from 'vue'\nimport Vuetify from 'vuetify'\nimport 'vuetify/dist/vuetify.min.css'\n//  import 'material-design-icons-iconfont/dist/material-design-icons.css'\nVue.use(Vuetify)\n\n// get values for the progress bars from local storage \n// show or hide each available progress bar based on whether or not user has defined categories for checking analytics \n// metrics are how many goals were checked off for each category \n// Categories are \"academics\",\"spending\",\"Medicine\", and \"Add New Category\" \n\nexport default {\n  name: 'MonthlyAnalytics',\n  //goal:0;\n  //actual:0;\n  data () {\n      return {\n        academicgoal: 0,\n        medicinegoal:0,\n        moneygoal:0,\n        academic:0,\n        medicine:0,\n        money:0,\n        selectedmonth:'',\n        day: this.todoDay(),\n        month:this.todomonth(),\n        date: new Date().getDate(),\n        ord: this.nth(new Date().getDate()),\n        year: new Date().getFullYear(),\n        month_items:[\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"]\n      }\n  }, \n\n  methods: {\n      todoDay() {\n      var d = new Date();\n      var days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n      return days[d.getDay()];\n    },\n    todomonth() {\n      var d = new Date();\n     var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      return months[d.getMonth()];\n    }\n    ,\n    nth(d) {\n      if(d>3 && d<21) return 'th';\n      switch (d % 10) {\n        case 1:  return \"st\";\n        case 2:  return \"nd\";\n        case 3:  return \"rd\";\n        default: return \"th\";\n      }\n    },\n     custom_sort(a, b) {\n    return (a.datesort).getTime() - (b.datesort).getTime();\n},\n \n       showbars(month){\n\n         document.getElementById(\"analytics\").innerHTML = \"\";\n           var data=JSON.parse(localStorage.getItem('largedict'));\n\n           if(data.hasOwnProperty(month)){\n               this.createBars(data[month]);\n           }\n\n           \n        //    else if (!data.hasOwnProperty(month){\n        //        document.getElementById(\"analytics\").innerHTML = \"\";\n        //    }\n           \n           \n\n       },\n       remove(){\n document.getElementById(\"analytics\").innerHTML = \"\";\n       },\n       createBars(categoryDict) {\n        var main = document.getElementById(\"analytics\");\n        var keys = Object.keys(categoryDict);\n        for (var k in keys) {\n            var section = document.createElement(\"div\");\n            main.appendChild(section);\n            section.setAttribute(\"class\", \"category\");\n            // setting the progress bar title for each category\n            var header = document.createElement(\"h1\");\n            var headerText = document.createTextNode(keys[k]+\" \"+categoryDict[keys[k]][1]+\"/\"+categoryDict[keys[k]][0]);\n            console.log(headerText);\n            header.appendChild(headerText);\n            section.appendChild(header);\n            // set default progress bar for each category \n            var bar = document.createElement(\"div\");\n            section.appendChild(bar);\n            bar.setAttribute(\"class\", \"progress\");\n            //var index = keys.indexOf(k);\n            //document.getElementsByTagName(\"div\")[index+1].setAttribute(\"class\",\"progress\");\n            var progress = document.createElement(\"div\");\n            bar.appendChild(progress);\n           \n            var percentProgress = categoryDict[keys[k]][1]/categoryDict[keys[k]][0]*100;\n            if (percentProgress > 100) {\n                console.log('100');\n                progress.setAttribute(\"class\", \"redBar\");\n                // var headerText2 = document.createTextNode(\"You have spent over your budget!\");\n                // header.appendChild(headerText2);\n                // section.appendChild(headerText2);\n                var w = percentProgress.toString() + \"%\";\n                progress.style.width = w;\n                progress.style.height = \"40px\";\n            }\n            else { \n                console.log(\"no\");\n                progress.setAttribute(\"class\", \"greenBar\");\n                var w = percentProgress.toString() + \"%\";\n                progress.style.width = w;\n                progress.style.height = \"40px\";\n            };\n            \n        }\n       }\n  },\n\n  mounted() {\n\n    var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n    // var dictionary={};\n    // var data=JSON.parse(localStorage.getItem('todojson'));\n    // console.log(data);\n    // //  for (var i=0;i<data.length;i++){\n    // //       var date=data[i].date.split('-');\n    // //       var d = new Date(date[0],date[1]-1,date[2]);\n    // //       // console.log(d);\n    // //       data[i].month=months[d.getMonth()];\n    // //     }\n    // // console.log(data);\n    // // var taskbymonth=_.groupBy(data,\"month\");\n    // // console.log(taskbymonth);\n    // for (var key in data){\n    //     console.log(data[key]);\n    //     if (data[key][\"category\"]=='Academics'){\n    //         console.log('yes');\n    //         this.academicgoal+=1;\n    //     }\n    //     // console.log(this.academicgoal);\n    //      if (data[key][\"category\"]=='Academics'&& data[key][\"done\"]=='true'){\n    //         console.log('yes');\n    //         this.academic+=1;\n    //     }\n    //      if (data[key][\"category\"]=='Medicine'){\n    //         console.log('yes');\n    //         this.medicinegoal+=1;\n    //     }\n    //     if (data[key][\"category\"]=='Medicine'&& data[key][\"done\"]=='true'){\n    //     console.log('yes');\n    //     this.medicine+=1;\n    //     }\n\n    //        if (data[key][\"category\"]==){\n    //     console.log('yes');\n    //     this.medicine+=1;\n    //     }\n    //    dictionary.month=data[key].month;\n    //    dictionary.month.push\n\n    // }\n\n    // for (var key in taskbymonth){\n    //     for (var task in taskbymonth[key]){\n    //         console.log(task);\n    //     }\n    // }\n    // completed=0;\n    // for (var i=0; i<data.length;i++){\n    //     console.log(data[i]);\n    //     if (data[i][\"category\"]==\"Academic\" &&data[i][\"done\"]==\"True\" ){\n    //         completed=completed+1;\n\n    //     }\n    // }\n\n\n    function createBars(categoryDict) {\n        var main = document.getElementById(\"analytics\");\n        var keys = Object.keys(categoryDict);\n        for (var k in keys) {\n            var section = document.createElement(\"div\");\n            main.appendChild(section);\n            section.setAttribute(\"class\", \"category\");\n            // setting the progress bar title for each category\n            var header = document.createElement(\"h1\");\n            header.appendChild(headerText);\n            section.appendChild(header);\n            // set default progress bar for each category \n            var bar = document.createElement(\"div\");\n            section.appendChild(bar);\n            bar.setAttribute(\"class\", \"progress\");\n            //var index = keys.indexOf(k);\n            //document.getElementsByTagName(\"div\")[index+1].setAttribute(\"class\",\"progress\");\n            var progress = document.createElement(\"div\");\n            bar.appendChild(progress);\n            progress.setAttribute(\"class\", \"greenBar\");\n            var percentProgress = categoryDict[keys[k]][1]/categoryDict[keys[k]][0]*100;\n            var w = percentProgress.toString() + \"%\";\n            progress.style.width = w;\n            progress.style.height = \"40px\";\n        };\n    };\n\n    function createDict(json) {\n        var newDict = {};\n        for (var index in json) {\n            var cat = json[index][\"category\"];\n            if (cat in newDict) {\n                var numTasks = newDict[cat][0];\n                var completed = newDict[cat][1];\n                var newNumTasks = numTasks+1;\n                if (json[index][\"done\"]==true){\n                    var newCompleted = completed + 1;\n                } else {\n                    var newCompleted = completed;\n                }\n                var newVal = [];\n                newVal.push(newNumTasks);\n                newVal.push(newCompleted);\n                // WAY TO CHANGE NUM OF COMPLETED TASKS \n                newDict[cat] = newVal;\n            } else {\n                var newVal = [1];\n                if (json[index][\"done\"]==true) {\n                    newVal.push(1);\n                } else {\n                    newVal.push(0);\n                }\n                newDict[cat] = newVal;\n            }\n        };\n        return JSON.stringify(newDict);\n    };\n\n    function changeProgress(newVal){\n            var current = document.getElementById('vd');\n            var val = newVal.toString();\n            var w = val + \"%\";\n            document.getElementById('vd').style.width=w;\n        };\n\n    var t = [ { \"title\": \"dfadf\", \"details\": \"dfdasf\", \"date\": \"2018-11-11\", \"time\": \"11:55\", \"done\": true, \"metric\": \"\", \"category\": \"Academics\", \"repeated\": \"Daily\" }, { \"title\": \"dfadf\", \"details\": \"dfdasf\", \"date\": \"2018-11-11\", \"time\": \"11:55\", \"done\": false, \"metric\": \"\", \"category\": \"Academics\", \"repeated\": \"Daily\" }]\n    var h = createDict([{ \"title\": \"dfadf\", \"details\": \"dfdasf\", \"date\": \"2018-11-11\", \"time\": \"11:55\", \"done\": true, \"metric\": \"\", \"category\": \"Academics\", \"repeated\": \"Daily\" }]);\n    var x = createDict(t);\n    localStorage.setItem(\"h\", h);\n    localStorage.setItem(\"x\", x);\n    //localStorage.setItem('value', 30);\n    //var newVal = localStorage.getItem('value');\n    //changeProgress(newVal);\n\n    var test = {\n        \"Spending\":[12,5],\n        \"Money\":[15,14],\n        \n    };\n    //   var test1 = {\n    //     Spending:[12,5],\n    //     Money:[15,14],\n    //     Medicine:[2,1]\n    // };\n    // var tests=_.groupBy(test1,\"Month\");\n    // console.log(tests);\n   \n\n    var data=JSON.parse(localStorage.getItem('todojson'));\n    var money=JSON.parse(localStorage.getItem('moneyspent'));\n    var goal=JSON.parse(localStorage.getItem('monthlyspending'));\n    console.log(money);\n    console.log(goal);\n   var largedict={};\n   var newDict = {};\n   var newmoney={}\n       \n     \n    //    console.log(money);\n        //  largedict[cat[i]['month']]\n    //     newmoney['Spending']=[];\n    //     newmoney['Spending'][1]=totalspending;\n    //     newmoney['Spending'][1]=totalspending;\n    //     // createBars(newmoney);\n\n    //    console.log(totalspending);\n    //    console.log(newmoney);\n       for (var index in data) {\n            console.log(index);\n            var cat = data[index];\n            console.log(cat);\n            var numTasks=0\n            var completed=0\n            for (var i=0;i<cat.length;i++){\n                console.log(cat[i]['category']);\n               var category= cat[i]['category']\n            var date=cat[i]['date'].split('-');\n      var d = new Date(date[0],date[1]-1,date[2]);\n    // //       // console.log(d);\n      // data[i].month=\n      cat[i]['month']= months[d.getMonth()];\n      console.log(newDict);\n            if ( newDict.hasOwnProperty(cat[i]['month']) && newDict[cat[i]['month']].hasOwnProperty(category)) {\n                console.log(\"worktime\");\n                var numTasks = newDict[cat[i]['month']][category][0];\n                console.log(numTasks);\n                var completed = newDict[cat[i]['month']][category][1];\n                console.log(completed);\n                var newNumTasks = numTasks+1;\n                if (cat[i]['done']==true){\n                    var completed = completed + 1;\n                } \n                var newVal = [];\n                newVal.push(newNumTasks);\n                newVal.push(completed);\n                // WAY TO CHANGE NUM OF COMPLETED TASKS \n                newDict[cat[i]['month']][category] = newVal;\n            }\n              else if ( newDict.hasOwnProperty(cat[i]['month']) && !newDict[cat[i]['month']].hasOwnProperty(category)) {\n                console.log(category);\n                // newDict[cat[i]['month']][category]={};\n                newDict[cat[i]['month']][category]=[];\n                newDict[cat[i]['month']][category].splice( 1, 0, 0 );\n                newDict[cat[i]['month']][category].splice( 0, 0, 1 );\n                var numTasks = newDict[cat[i]['month']][category][0];\n                // console.log(numTasks);\n                var completed = newDict[cat[i]['month']][category][1];\n                // console.log(completed);\n                // var numTasks = numTasks+1;\n                if (cat[i]['done']==true){\n                    var completed = completed + 1;\n                }\n                var newVal = [];\n                newVal.push(numTasks);\n                newVal.push(completed);\n                // console.log(newVal);\n                // WAY TO CHANGE NUM OF COMPLETED TASKS \n                newDict[cat[i]['month']][category] = newVal;\n            }\n\n             \n            else {\n                var newVal = [];\n                // var numTasks = newDict[category][0];\n                // var completed = newDict[category][1];\n                newVal.splice( 0, 0, 1);\n                newVal.splice( 1, 0, 0);\n                if (cat[i]['done']==true) {\n                    newVal.splice( 1, 0, 1 );\n                } \n                console.log(newVal);\n                newDict[cat[i]['month']]={};\n                newDict[cat[i]['month']][cat[i]['category']] = newVal;\n            }\n                console.log(newDict);\n                // largedict[cat[i]['month']]=newDict;\n                \n            }\n        // largedict[]\n        largedict=newDict;\n        };\n\n \n\n\n    //    var totalspending=0\n       for ( var amount in money){\n           console.log((amount));\n           var moneydata=money[amount];\n           \n        //    totalspending+=parseFloat(money[amount]['spent'])\n        //    console.log(totalspending);\n\n        for (var i=0;i<moneydata.length;i++){\n\n           var date=moneydata[i]['date'].split('-');\n      var d = new Date(date[0],date[1]-1,date[2]);\n         \n      // data[i].month=\n      \n     moneydata[i]['month']= months[d.getMonth()];\n     \n        // console.log(goal[moneydata[i]['month']]);\n      if (largedict[moneydata[i]['month']] && largedict[moneydata[i]['month']].hasOwnProperty('Spending') && goal){\n        //   largedict[money[amount]['month']]['Spending']=[0,0];\n     \n        if(goal.hasOwnProperty([moneydata[i]['month']])){\n                \n         \n          largedict[moneydata[i]['month']]['Spending'][0]=parseFloat(goal[moneydata[i]['month']]['spend_goal']);\n\n        largedict[moneydata[i]['month']]['Spending'][1]+=parseFloat(moneydata[i]['spent'])\n      \n        }\n        else if(!goal.hasOwnProperty([moneydata[i]['month']])){\n        \n         largedict[moneydata[i]['month']]['Spending'][1]+=parseFloat(moneydata[i]['spent'])\n          largedict[moneydata[i]['month']]['Spending'][0]=500;\n         \n\n       }\n      }\n       else if (largedict[moneydata[i]['month']] && largedict[moneydata[i]['month']].hasOwnProperty('Spending')&& !goal){\n        //   largedict[moneydata[i]['month']]['Spending']=[0,0];\n\n          largedict[moneydata[i]['month']]['Spending'][1]+=parseFloat(moneydata[i]['spent']);\n                 largedict[moneydata[i]['month']]['Spending'][0]=500;\n                  }\n\n      else if (largedict[moneydata[i]['month']] && !largedict[moneydata[i]['month']].hasOwnProperty('Spending')&& !goal){\n       \n          largedict[moneydata[i]['month']]['Spending']=[0,0];\n          largedict[moneydata[i]['month']]['Spending'][1]+=parseFloat(moneydata[i]['spent']);\n          largedict[moneydata[i]['month']]['Spending'][0]=500;\n\n}\n              else if (largedict[moneydata[i]['month']] && !largedict[moneydata[i]['month']].hasOwnProperty('Spending')&& goal){\n        \n        if(goal.hasOwnProperty([moneydata[i]['month']])){\n             \n        largedict[moneydata[i]['month']]['Spending']=[0,0];\n          largedict[moneydata[i]['month']]['Spending'][1]+=parseFloat(moneydata[i]['spent']);\n                 largedict[moneydata[i]['month']]['Spending'][0]=parseFloat(goal[moneydata[i]['month']]['spend_goal']);\n        }\n        else if(!goal.hasOwnProperty([moneydata[i]['month']])){\n             \n        largedict[moneydata[i]['month']]['Spending']=[0,0];\n          largedict[moneydata[i]['month']]['Spending'][1]+=parseFloat(moneydata[i]['spent']);\n                 largedict[moneydata[i]['month']]['Spending'][0]=500;\n         \n\n       }\n              }\n\n                  \n    //  else  if (!largedict[money[amount]['month']] && !largedict[money[amount]['month']].hasOwnProperty('Spending') && goal.hasOwnProperty([money[amount]['month']])){\n    //     //   largedict[money[amount]['month']]['Spending']=[0,0];\n    //     console.log('yes')\n    //       largedict[money[amount]['month']]['Spending'][1]+=parseFloat(money[amount]['spent'])\n    //       largedict[money[amount]['month']]['Spending'][0]=parseFloat(goal[money[amount]['month']]['spend_goal']);\n\n    //    }\n     \n      else if (Object.keys(largedict).length === 0 && !goal){\n        //    largedict[cat[i]['month']]\n        \n        largedict[moneydata[i]['month']]={};\n          largedict[moneydata[i]['month']]['Spending']=[0,0];\n          largedict[moneydata[i]['month']]['Spending'][1]+=parseFloat(moneydata[i]['spent']);\n          largedict[moneydata[i]['month']]['Spending'][0]=500;\n\n}\n              else if (Object.keys(largedict).length === 0 && goal){\n                  if(goal.hasOwnProperty([moneydata[i]['month']])){\n largedict[moneydata[i]['month']]={}\n          largedict[moneydata[i]['month']]['Spending']=[0,0];\n          largedict[moneydata[i]['month']]['Spending'][1]+=parseFloat(moneydata[i]['spent']);\n                 largedict[moneydata[i]['month']]['Spending'][0]=parseFloat(goal[moneydata[i]['month']]['spend_goal']);\n        }\n        else if(!goal.hasOwnProperty([moneydata[i]['month']])){\n        largedict[moneydata[i]['month']]={}\n          largedict[moneydata[i]['month']]['Spending']=[0,0];\n          largedict[moneydata[i]['month']]['Spending'][1]+=parseFloat(moneydata[i]['spent']);\n                 largedict[moneydata[i]['month']]['Spending'][0]=500;\n\n       }\n            \n                 \n}\n//                   else if (!largedict[money[amount]['month']] && !largedict[money[amount]['month']].hasOwnProperty('Spending')&& !goal.hasOwnProperty([money[amount]['month']])){\n//           largedict[money[amount]['month']]['Spending']=[0,0];\n//           largedict[money[amount]['month']]['Spending'][1]+=parseFloat(money[amount]['spent']);\n//                  largedict[money[amount]['month']]['Spending'][0]=500;\n \n//     //    if\n\n\n// }\n       }\n         \n        //   localStorage.removeItem('largedict');\n            // localStorage.setItem(\"largedict\", JSON.stringify(largedict)); \n        // return JSON.stringify(newDict);\n    //  for (var info in largedict){\n    //      console.log(largedict[info]);\n    //      createBars(largedict[info]);\n    //  }\n       }\n        console.log(largedict);\n        localStorage.setItem(\"largedict\", JSON.stringify(largedict)); \n}\n}\n</script>\n\n<style>\nh1 {\n    display: block;\n    padding: 2%;\n}\n\n.category {\n    display: block;\n}\n\n.progress {\n    width: 90%;\n    display: block;\n    height: 40px;\n    background-color: lightgray;\n    margin-left: auto;\n    margin-right: auto;\n    border-radius: 75px;\n}\n.barText {\n    position: relative;\n    z-index: 1;\n    top: -35px;\n}\n#vd {\n    width: 10%;\n    height:40px;\n    background-color: green;\n}\n.greenBar {\n    border-radius: 75px;\n    background-image: linear-gradient(to right, lightblue, blue);\n    max-width: 100%;\n}\n.redBar {\n    border-radius: 75px;\n    background-image: linear-gradient(to right, pink, red);\n    max-width: 100%;\n}\n.centername {\n  text-align: center;\n}\n#header{\n  font-size: 20px;\n  text-align: center;\n}\n#selectedmonth {\n    width: 75%;\n    padding-left: 100px;\n}\n</style>\n"]}]}