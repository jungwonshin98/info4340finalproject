{"remainingRequest":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jungwonshin/Downloads/git-and-tonic-project/src/components/main.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/src/components/main.vue","mtime":1552400976000},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/vuetify-loader/lib/loader.js","mtime":1539688874000},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/cache-loader/dist/cjs.js","mtime":1593141034110},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n\n\n// @ is an alias to /src\n// import HelloWorld from '@/components/HelloWorld.vue'\nimport _ from 'lodash'\n\nexport default {\n  // name: 'tracker',\n  //  props: ['todos'],\n data () {\n    return {\n      // console.log(todolist);\n      id: 0,\n      todolist: [],\n      newTodo: '',\n      todo: [],\n      todos: [],\n      day: this.todoDay(),\n      month:this.todomonth(),\n      date: new Date().getDate(),\n      ord: this.nth(new Date().getDate()),\n      year: new Date().getFullYear(),\n        offsetTop: 0,\n        dialog:false,\n        num:0\n      // duedate:\n    }\n  },\n   computed: {\n    // a computed getter\n    number: function () {\n      var l=0;\n      for (var data in this.todolist){\n        l+=this.todolist[data].length\n      }\n      this.$set(this.$data,\"num\",l);\n      return l\n    }\n  },\n  methods: {\n    // addTodo() {\n    //   var value = this.newTodo && this.newTodo.trim();\n    //   if (!value) {\n    //     return;\n    //   }\n    //   this.todos.push({\n    //     title: this.newTodo,\n    //     done: false\n    //   });\n    //   this.newTodo = '';\n    // },\n\n    update(value,index){\n       var data=JSON.parse(localStorage.getItem('todojson'));\n       console.log(data);\n       console.log(value);\n\n       data[value.date][index]=value\n    //   console.log(value);\n    // var update=Object.values(this.todolist);\n    // console.log(update);\n    // var combined=[].concat.apply([], update);\n    // console.log(combined)\n\n    \n    // var correctindex=combined.length-1+index;\n    // var data=JSON.parse(localStorage.getItem('todojson'));\n    // console.log(data[correctindex]);\n    // data[correctindex]=value;\n\n    //  var task=update[value.date][index];\n     \n    //  console.log(task);\n    //  task\n    //  console.log(index);\n    //  update[index]=value;\n    // //  console.log(task[index]);\n    //  console.log(  update[index]);\n    //  console.log(update);\n     localStorage.setItem('todojson',JSON.stringify(data));\n\n    //  =task[index]\n    },\n    removeTodo(value,index) {\n      // console.log(\"working\")\n      console.log(value);\n      console.log(index);\n      console.log(this.todolist)\n      var correct=this.todolist[value.date]\n      console.log(correct);\n      if (Object.keys(this.todolist).length==1 && correct.length>1){\n        console.log('first')\n        correct.splice(index,1);\n        \n      localStorage.setItem('todojson',JSON.stringify(this.todolist));\n    }\n      // console.log(Object.keys(this.todolist).length);\n      // console.log(correct.length);\n      else if (correct.length==1 && Object.keys(this.todolist).length==1){\n        console.log('second');\n        this.todolist=[];\n        localStorage.removeItem('todojson');\n      }\n\n      else if ((Object.keys(this.todolist).length>1 && correct.length>1)){\n\n        console.log('third')\n correct.splice(index,1);\n        \n      localStorage.setItem('todojson',JSON.stringify(this.todolist));\n      }\n\n      else if ((Object.keys(this.todolist).length>1 && correct.length==1)){\n        console.log('fifth')\n           correct.splice(index,1);\n           delete this.todolist[value.date];\n      localStorage.setItem('todojson',JSON.stringify(this.todolist));\n      }\n      // var values = Object.keys(this.todolist).map(function (key) { return this.todolist[key]; });\n      // console.log(values);\n      // // console.log(index);\n      // this.todolist.values.splice(index, 1);\n      // console.log(this.todolist);\n     \n     \n    },\n\n    todoDay() {\n      var d = new Date();\n      var days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n      return days[d.getDay()];\n    },\n    todomonth() {\n      var d = new Date();\n     var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      return months[d.getMonth()];\n    }\n    ,\n    nth(d) {\n      if(d>3 && d<21) return 'th';\n      switch (d % 10) {\n        case 1:  return \"st\";\n        case 2:  return \"nd\";\n        case 3:  return \"rd\";\n        default: return \"th\";\n      }\n    },\n     custom_sort(a, b) {\n    return (a.datesort).getTime() - (b.datesort).getTime();\n},\n checkDuplicateInObject(propertyName, inputArray) { var seenDuplicate = false, testObject = {}; inputArray.map(function(item) { var itemPropertyName = item[propertyName]; if (itemPropertyName in testObject) { testObject[itemPropertyName].duplicate = true; item.duplicate = true; seenDuplicate = true; } else { testObject[itemPropertyName] = item; delete item.duplicate; } }); return seenDuplicate; },\n check(date){\n    var counter=0\n    for(var i = 0; i < this.todolist.length; i++) {\n    if (this.todolist[i].date == date) {\n      counter=counter+1;\n    }\n    } \n    if (counter==1){\n      return true\n    }\n    return false\n\n },\n  // onScroll (e) {\n  //     this.offsetTop = e.target.scrollTop\n  //   }\n  },\n    mounted() {\n      var get=JSON.parse(localStorage.getItem('todojson'));\n     \n      console.log(get);\n      \n      if (get) {\n\n    var update=Object.values(get);\n    console.log(update);\n    var combined=[].concat.apply([], update);\n    console.log(combined);\n        for (var i=0;i<combined.length;i++){\n          var date=combined[i].date.split('-');\n          var d = new Date(date[0],date[1]-1,date[2]);\n          // console.log(d);\n          combined[i].datesort=d;\n        }\n      console.log(Object.keys(combined).length);  \n      if (Object.keys(combined).length>1){\n      combined.sort(this.custom_sort);\n      }\n      console.log(combined)\n      var taskbydate=_.groupBy(combined,\"date\");\n      console.log(taskbydate);\n      this.$set(this.$data,\"todolist\",taskbydate);\n      // console.log(this.todolist)\n      // this.$set(this.$data,\"output\",localStorage.getItem('event'));\n    // timeinterval = setInterval(() => {\n    //         this.current = Math.trunc((new Date()).getTime() / 1000);\n    //     }, 1000);\n    }\n  //  created() {\n  //           this.id = this.$route.params.id;\n  //           if(this.$route.query.debug) {\n  //               this.debug = this.$route.query.debug;\n  //           }\n  //  }\n}\n}\n",{"version":3,"sources":["main.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA+HA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"main.vue","sourceRoot":"src/components","sourcesContent":["<template>\n\n\n<div id=\"app\">\n\n  <v-app>\n    \n    <v-content>\n\n      <v-container >  \n\n        <v-layout row class=\"mt-3\" >\n\n          <v-flex xs12 sm6 offset-sm3>\n\n            <v-card>\n              <v-toolbar color=\"white\">\n                <!-- <v-toolbar-side-icon></v-toolbar-side-icon> -->\n                <v-flex>\n                <v-toolbar-title id=\"centername1\" class=\"headline\">Tracker</v-toolbar-title>\n                </v-flex>\n              </v-toolbar>\n              <v-toolbar color=\"blue darken-4\">\n                <v-flex class=\"centername\">\n                <v-toolbar-title class=\"headline white--text\">{{day}}, {{month}} {{date}}{{ord}}</v-toolbar-title>\n                </v-flex>\n              </v-toolbar>\n              <v-divider></v-divider>\n              <v-list two-line subheader>\n                <v-container>\n              \n                </v-container>\n                <v-subheader class=\"subheading\" v-if=\"num==0\">You have {{number}} Tasks, add some</v-subheader>\n                <v-subheader class=\"subheading\" v-if=\"num>0\">{{number}}  Tasks</v-subheader>\n                <div v-for=\"(key,data) in todolist\" :key=\"data.id\">\n                <v-list-tile-title class=\"title\"> Due Date: {{data}}</v-list-tile-title>\n                <div  id=\"padding\" v-for=\"(value,index) in key\"  v-bind:key=\"value.id\"\n      v-bind:title=\"value.title\"\n      v-on:remove=\"value.splice(index, 1)\">\n               \n                  <v-list-tile avatar>\n                    <v-list-tile-action>\n                      <v-checkbox class = \"moveman\"  v-model=\"value.done\" @change=\"update(value,index)\" ></v-checkbox>\n                    </v-list-tile-action>\n                    <v-list-tile-content>\n                      <v-list-tile-title v-if=\"value.category!= 'Spending'\" :class=\"{\n                  done: value.done\n                  }\" class=\"title\"> {{value.title}}\n                      </v-list-tile-title>\n\n                       <v-list-tile-title v-else-if=\"value.category== 'Spending'\" :class=\"{\n                  done: value.done\n                  }\" class=\"title\">{{\"$ \"+value.spend_goal}}\n                      </v-list-tile-title>\n                      <v-list-tile-sub-title  class = \"moveover\">Category: {{value.category}}</v-list-tile-sub-title>\n                      <v-list-tile-sub-title class = \"moveover\" v-if=\"value.category!= 'Spending'\">Added on: {{day}}, {{month}} {{date}}{{ord}}</v-list-tile-sub-title>\n                      <!-- <v-list-tile-sub-title class = \"moveover\" v-if=\"value.category!= 'Spending'\">Due on: {{value.date}}</v-list-tile-sub-title> -->\n                      <!-- <v-list-tile-sub-title v-if=\"value.category== 'Spending'\">{{value.repeated}} Monthly Spending Goal</v-list-tile-sub-title> -->\n                      <v-list-tile-sub-title class = \"moveover\">Time:{{value.time}} </v-list-tile-sub-title>\n                      <v-list-tile-sub-title class = \"moveover\">Details:{{value.details}} </v-list-tile-sub-title>\n                      \n                      \n                    </v-list-tile-content>\n                  <!-- <v-dialog v-model=\"dialog\" max-width=\"290\">\n                     <v-btn icon ripple color=\"red\" slot=\"activator\"> <v-icon> close </v-icon> </v-btn>\n                     <v-card>\n                       <v-card-title class=\"headline\">Remove Your Task</v-card-title>\n                       <v-card-text>Are you sure you want to remove this task? This action is irreversible and this task will no longer be visible in your analytics. </v-card-text>\n                       <v-card-actions>\n                         <v-spacer></v-spacer> -->\n                           <!-- <v-btn color=\"red\" dialog = false><v-icon>CANCEL</v-icon></v-btn> -->\n                           <!-- <v-btn icon ripple color=\"red\" @click=\"removeTodo(value,index); dialog = false\"><v-icon>DELETE</v-icon></v-btn> -->\n                          <!-- <router-link to=\"/\"> <v-btn color=\"green darken-1\" flat @click =\"dialog = false\">Cancel</v-btn></router-link> -->\n                           <!-- <router-link to=\"/\"> <v-btn color=\"red darken-1\" flat @click.native=\"dialog = true\">Cancel</v-btn></router-link> -->\n                           <!-- <v-btn color=\"red\" @click=\"removeTodo(value,index); dialog = false\">Delete</v-btn>\n                       </v-card-actions>\n                     </v-card>\n                   </v-dialog> -->\n\n\n                    <v-btn icon ripple color=\"red\" @click=\"removeTodo(value,index)\">\n                      <v-icon>close</v-icon>\n                    </v-btn>\n                  </v-list-tile>\n                </div>\n                </div>\n              </v-list>\n          \n    <v-bottom-nav>\n      <v-btn :to=\"{name: 'main'}\">\n        <span>Home</span>\n        <v-icon>home</v-icon>\n        \n      </v-btn>\n      \n      <v-btn :to=\"{name: 'page1'}\">\n        <span>Tasks</span>\n        <v-icon>add</v-icon>\n      </v-btn>\n \n      <v-btn :to=\"{name: 'spending'}\">\n        <span>Spending</span>\n        <v-icon>attach_money</v-icon>\n      </v-btn>\n\n      <v-btn :to=\"{name: 'analytics'}\">\n        <span>Analytics</span>\n        <v-icon>bar_chart</v-icon>\n      </v-btn>\n    </v-bottom-nav>\n\n            </v-card>\n          </v-flex>\n        </v-layout>\n      </v-container>\n\n\n       \n\n    </v-content>\n  </v-app>\n</div>\n\n</template>\n\n<script>\n\n// @ is an alias to /src\n// import HelloWorld from '@/components/HelloWorld.vue'\nimport _ from 'lodash'\n\nexport default {\n  // name: 'tracker',\n  //  props: ['todos'],\n data () {\n    return {\n      // console.log(todolist);\n      id: 0,\n      todolist: [],\n      newTodo: '',\n      todo: [],\n      todos: [],\n      day: this.todoDay(),\n      month:this.todomonth(),\n      date: new Date().getDate(),\n      ord: this.nth(new Date().getDate()),\n      year: new Date().getFullYear(),\n        offsetTop: 0,\n        dialog:false,\n        num:0\n      // duedate:\n    }\n  },\n   computed: {\n    // a computed getter\n    number: function () {\n      var l=0;\n      for (var data in this.todolist){\n        l+=this.todolist[data].length\n      }\n      this.$set(this.$data,\"num\",l);\n      return l\n    }\n  },\n  methods: {\n    // addTodo() {\n    //   var value = this.newTodo && this.newTodo.trim();\n    //   if (!value) {\n    //     return;\n    //   }\n    //   this.todos.push({\n    //     title: this.newTodo,\n    //     done: false\n    //   });\n    //   this.newTodo = '';\n    // },\n\n    update(value,index){\n       var data=JSON.parse(localStorage.getItem('todojson'));\n       console.log(data);\n       console.log(value);\n\n       data[value.date][index]=value\n    //   console.log(value);\n    // var update=Object.values(this.todolist);\n    // console.log(update);\n    // var combined=[].concat.apply([], update);\n    // console.log(combined)\n\n    \n    // var correctindex=combined.length-1+index;\n    // var data=JSON.parse(localStorage.getItem('todojson'));\n    // console.log(data[correctindex]);\n    // data[correctindex]=value;\n\n    //  var task=update[value.date][index];\n     \n    //  console.log(task);\n    //  task\n    //  console.log(index);\n    //  update[index]=value;\n    // //  console.log(task[index]);\n    //  console.log(  update[index]);\n    //  console.log(update);\n     localStorage.setItem('todojson',JSON.stringify(data));\n\n    //  =task[index]\n    },\n    removeTodo(value,index) {\n      // console.log(\"working\")\n      console.log(value);\n      console.log(index);\n      console.log(this.todolist)\n      var correct=this.todolist[value.date]\n      console.log(correct);\n      if (Object.keys(this.todolist).length==1 && correct.length>1){\n        console.log('first')\n        correct.splice(index,1);\n        \n      localStorage.setItem('todojson',JSON.stringify(this.todolist));\n    }\n      // console.log(Object.keys(this.todolist).length);\n      // console.log(correct.length);\n      else if (correct.length==1 && Object.keys(this.todolist).length==1){\n        console.log('second');\n        this.todolist=[];\n        localStorage.removeItem('todojson');\n      }\n\n      else if ((Object.keys(this.todolist).length>1 && correct.length>1)){\n\n        console.log('third')\n correct.splice(index,1);\n        \n      localStorage.setItem('todojson',JSON.stringify(this.todolist));\n      }\n\n      else if ((Object.keys(this.todolist).length>1 && correct.length==1)){\n        console.log('fifth')\n           correct.splice(index,1);\n           delete this.todolist[value.date];\n      localStorage.setItem('todojson',JSON.stringify(this.todolist));\n      }\n      // var values = Object.keys(this.todolist).map(function (key) { return this.todolist[key]; });\n      // console.log(values);\n      // // console.log(index);\n      // this.todolist.values.splice(index, 1);\n      // console.log(this.todolist);\n     \n     \n    },\n\n    todoDay() {\n      var d = new Date();\n      var days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n      return days[d.getDay()];\n    },\n    todomonth() {\n      var d = new Date();\n     var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      return months[d.getMonth()];\n    }\n    ,\n    nth(d) {\n      if(d>3 && d<21) return 'th';\n      switch (d % 10) {\n        case 1:  return \"st\";\n        case 2:  return \"nd\";\n        case 3:  return \"rd\";\n        default: return \"th\";\n      }\n    },\n     custom_sort(a, b) {\n    return (a.datesort).getTime() - (b.datesort).getTime();\n},\n checkDuplicateInObject(propertyName, inputArray) { var seenDuplicate = false, testObject = {}; inputArray.map(function(item) { var itemPropertyName = item[propertyName]; if (itemPropertyName in testObject) { testObject[itemPropertyName].duplicate = true; item.duplicate = true; seenDuplicate = true; } else { testObject[itemPropertyName] = item; delete item.duplicate; } }); return seenDuplicate; },\n check(date){\n    var counter=0\n    for(var i = 0; i < this.todolist.length; i++) {\n    if (this.todolist[i].date == date) {\n      counter=counter+1;\n    }\n    } \n    if (counter==1){\n      return true\n    }\n    return false\n\n },\n  // onScroll (e) {\n  //     this.offsetTop = e.target.scrollTop\n  //   }\n  },\n    mounted() {\n      var get=JSON.parse(localStorage.getItem('todojson'));\n     \n      console.log(get);\n      \n      if (get) {\n\n    var update=Object.values(get);\n    console.log(update);\n    var combined=[].concat.apply([], update);\n    console.log(combined);\n        for (var i=0;i<combined.length;i++){\n          var date=combined[i].date.split('-');\n          var d = new Date(date[0],date[1]-1,date[2]);\n          // console.log(d);\n          combined[i].datesort=d;\n        }\n      console.log(Object.keys(combined).length);  \n      if (Object.keys(combined).length>1){\n      combined.sort(this.custom_sort);\n      }\n      console.log(combined)\n      var taskbydate=_.groupBy(combined,\"date\");\n      console.log(taskbydate);\n      this.$set(this.$data,\"todolist\",taskbydate);\n      // console.log(this.todolist)\n      // this.$set(this.$data,\"output\",localStorage.getItem('event'));\n    // timeinterval = setInterval(() => {\n    //         this.current = Math.trunc((new Date()).getTime() / 1000);\n    //     }, 1000);\n    }\n  //  created() {\n  //           this.id = this.$route.params.id;\n  //           if(this.$route.query.debug) {\n  //               this.debug = this.$route.query.debug;\n  //           }\n  //  }\n}\n}\n</script>\n<style scoped>\n.done {\n  text-decoration: line-through;\n}\n#centername1{\n  text-align: center;\n}\n.centername {\n  text-align: center;\n}\n.title {\n  margin-left: 5%;\n}\n.moveover {\n  margin-left: 5%;\n  margin-top: -5px;\n}\n.moveman {\n  margin-left: 17%;\n}\n#padding {\n  padding: 0px;\n}\n</style>"]}]}