{"remainingRequest":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jungwonshin/Downloads/git-and-tonic-project/src/components/spending.vue?vue&type=style&index=0&id=55a40858&scoped=true&lang=css&","dependencies":[{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/src/components/spending.vue","mtime":1552400976000},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/vuetify-loader/lib/loader.js","mtime":1539688874000},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/cache-loader/dist/cjs.js","mtime":1593141034110},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n.done {\n  text-decoration: line-through;\n}\n#movebutton {\n  text-align: center;\n}\nform {\n  height: 200px;\n}\n.centername {\n  text-align: center;\n}\n#spendingbutton {\n  color: white;\n}\n\n#header {\n  font-size: 17px;\n}\n\n#moveover {\n  margin-left: 2.5%;\n}\n\n.moveman {\n  margin-left: 5%;\n}\n\n/* #padding {\n  padding: 5px;\n} */\n",{"version":3,"sources":["spending.vue"],"names":[],"mappingsfile":"spending.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div id=\"app\">\n\n  <v-app>\n    <v-content>\n      <v-container >  \n        <v-layout row class=\"mt-3\" >\n          <v-flex xs12 sm6 offset-sm3>\n            <v-card white>\n              <v-toolbar color=\"white\">\n                <!-- <v-toolbar-side-icon></v-toolbar-side-icon> -->\n                <v-flex class=\"centername\">\n                <v-toolbar-title id=\"appname\" class=\"headline\">Tracker</v-toolbar-title>\n                </v-flex>\n              </v-toolbar>\n              <v-toolbar color=\"blue darken-4\">\n                <v-flex class=\"centername\">\n                <v-toolbar-title class=\"headline white--text\">{{day}}, {{month}} {{date}}{{ord}}</v-toolbar-title>\n                </v-flex>\n              </v-toolbar>\n              <v-divider></v-divider>\n\n                   <!-- <div v-for=\"(data,key) in monthly\" :key=\"key.id\"> -->\n                <!-- <v-list-tile-title class=\"title\">   {{data}}</v-list-tile-title> -->\n                        <v-subheader id=\"header\">Monthly Spending Goals (Default:500) \n                           </v-subheader>\n                   <v-list two-line subheader>\n\n                <div  v-for=\"(value,index) in monthly\"  v-bind:key=\"value.id\"\n      v-bind:title=\"value.title\"\n      v-on:remove=\"value.splice(index, 1)\">\n                <!-- <v-list-tile-title class=\"title\">   {{value}}</v-list-tile-title> -->\n                \n                  <v-list-tile avatar>\n                    <!-- <v-list-tile-action>\n                      <v-checkbox   v-model=\"value.done\" @change=\"update(value,index)\" ></v-checkbox>\n                    </v-list-tile-action> -->\n            \n                    <v-list-tile-content id=\"padding\">\n                       <v-list-tile-title :class=\"{done: value.done}\" class=\"title\">{{\"$ \"+value.spend_goal}}\n                      </v-list-tile-title>\n                      <v-list-tile-sub-title>Month Spending Goal: {{value.month}}</v-list-tile-sub-title>\n                      <v-list-tile-sub-title v-if=\"value.category!= 'Spending'\">Added on: {{day}}, {{month}} {{date}}{{ord}}</v-list-tile-sub-title>\n                      <!-- <v-list-tile-sub-title>{{value.date}}</v-list-tile-sub-title>\n                      <v-list-tile-sub-title v-if=\"value.category== 'Spending'\"> Monthly Spending Goal</v-list-tile-sub-title> -->\n                    </v-list-tile-content>\n            \n                    <!-- <v-dialog v-model=\"dialog\" max-width=\"290\">\n                      <v-btn icon ripple color=\"red\" slot=\"activator\"> <v-icon> close </v-icon> </v-btn>\n                      <v-card>\n                        <v-card-title class=\"headline\">Remove Your Task</v-card-title>\n                        <v-card-text>Are you sure you want to remove this task? This action is irreversible and this task will no longer be visible in your analytics. </v-card-text>\n                        <v-card-actions>\n                          <v-spacer></v-spacer> -->\n                            <!-- <v-btn color=\"red\" dialog = false><v-icon>CANCEL</v-icon></v-btn> -->\n                            <!-- <v-btn icon ripple color=\"red\" @click=\"removeTodo(value,index); dialog = false\"><v-icon>DELETE</v-icon></v-btn> -->\n                            <!-- <router-link to=\"/\"> <v-btn color=\"green darken-1\" flat @click =\"dialog = false\">Cancel</v-btn></router-link> -->\n                            <!-- <router-link to=\"/\"> <v-btn color=\"red darken-1\" flat @click.native=\"dialog = true\">Cancel</v-btn></router-link> -->\n                            <!-- <v-btn color=\"red\" @click=\"removeTodo(value,index); dialog=false\">Delete</v-btn> -->\n                        <!-- </v-card-actions> -->\n                      <!-- </v-card> -->\n                    <!-- </v-dialog> -->\n                    \n                    <!-- <v-btn icon ripple color=\"red\" @click=\"removeTodo(value,index)\">\n                      <v-icon>close</v-icon>\n                    </v-btn> -->\n                  </v-list-tile>\n                  \n                </div>\n                            </v-list>\n                <!-- </div> -->\n\n\n\n              <v-list two-line subheader>\n                <v-container>\n                  <p class=\"text-xs-right\">Expenses: <b>{{number}}</b></p>\n             \n                </v-container>\n                <div v-for=\"(key,data) in spendlist\" :key=\"data.id\">\n                <v-list-tile-title id= \"moveover\" class=\"title\">   {{data}}</v-list-tile-title>\n                <div  v-for=\"(value,index) in key\"  v-bind:key=\"value.id\"\n      v-bind:title=\"value.title\"\n      v-on:remove=\"value.splice(index, 1)\">\n               \n                  <v-list-tile avatar>\n                    <!-- <v-list-tile-action>\n                      <v-checkbox   v-model=\"value.done\" @change=\"update(value,index)\" ></v-checkbox>\n                    </v-list-tile-action> -->\n                    <v-list-tile-content>\n                       <v-list-tile-title :class=\"{done: value.done}\" class=\"title\">{{\"$ \"+value.spent}}\n                      </v-list-tile-title>\n                      <v-list-tile-sub-title>Category: {{value.category}}</v-list-tile-sub-title>\n                      <v-list-tile-sub-title v-if=\"value.category!= 'Spending'\">Added on: {{day}}, {{month}} {{date}}{{ord}}</v-list-tile-sub-title>\n                      <!-- <v-list-tile-sub-title>{{value.date}}</v-list-tile-sub-title> -->\n                       <v-list-tile-sub-title>{{value.details}}</v-list-tile-sub-title>\n                      <v-list-tile-sub-title v-if=\"value.category== 'Spending'\"> Monthly Spending Goal</v-list-tile-sub-title>\n                    </v-list-tile-content>\n            \n                    <!-- <v-dialog v-model=\"dialog\" max-width=\"290\">\n                      <v-btn icon ripple color=\"red\" slot=\"activator\"> <v-icon> close </v-icon> </v-btn>\n                      <v-card>\n                        <v-card-title class=\"headline\">Remove Your Task</v-card-title>\n                        <v-card-text>Are you sure you want to remove this task? This action is irreversible and this task will no longer be visible in your analytics. </v-card-text>\n                        <v-card-actions>\n                          <v-spacer></v-spacer> -->\n                            <!-- <v-btn color=\"red\" dialog = false><v-icon>CANCEL</v-icon></v-btn> -->\n                            <!-- <v-btn icon ripple color=\"red\" @click=\"removeTodo(value,index); dialog = false\"><v-icon>DELETE</v-icon></v-btn> -->\n                            <!-- <router-link to=\"/\"> <v-btn color=\"green darken-1\" flat @click =\"dialog = false\">Cancel</v-btn></router-link> -->\n                            <!-- <router-link to=\"/\"> <v-btn color=\"red darken-1\" flat @click.native=\"dialog = true\">Cancel</v-btn></router-link> -->\n                            <!-- <v-btn color=\"red\" @click=\"removeTodo(value,index); dialog=false\">Delete</v-btn> -->\n                        <!-- </v-card-actions> -->\n                      <!-- </v-card> -->\n                    <!-- </v-dialog> -->\n                    \n                    <v-btn icon ripple color=\"red\" @click=\"removeTodo(value,index)\">\n                      <v-icon>close</v-icon>\n                    </v-btn>\n                  </v-list-tile>\n                  \n                </div>\n              \n                </div>\n              </v-list>\n\n        <v-flex id=\"movebutton\">\n          <router-link to=\"/input_spending\"> <v-btn id=\"spendingbutton\" class=\"blue darken-4\">Add Spending</v-btn></router-link>\n        </v-flex>\n\n    <v-bottom-nav\n      \n     \n      absolute\n      color=\"transparent\"\n    >\n      <v-btn :to=\"{name: 'main'}\">\n        <span>Home</span>\n        <v-icon>home</v-icon>\n      </v-btn>\n\n      <v-btn :to=\"{name: 'page1'}\">\n        <span>Tasks</span>\n        <v-icon>add</v-icon>\n      </v-btn>\n\n \n      <v-btn :to=\"{name: 'spending'}\">\n        <span>Spending</span>\n        <v-icon>attach_money</v-icon>\n      </v-btn>\n\n      <v-btn :to=\"{name: 'analytics'}\">\n        <span>Analytics</span>\n        <v-icon>bar_chart</v-icon>\n      </v-btn>\n    </v-bottom-nav>\n\n            </v-card>\n          </v-flex>\n        </v-layout>\n      </v-container>\n\n    </v-content>\n  </v-app>\n</div>\n\n</template>\n\n<script>\nimport _ from 'lodash'\n\nexport default {\n\n data () {\n    return {\n \n      id: 0,\n      todolist: [],\n      spendlist: [],\n      monthly:{},\n      newTodo: '',\n      todo: [],\n      todos: [],\n      day: this.todoDay(),\n      month:this.todomonth(),\n      date: new Date().getDate(),\n      ord: this.nth(new Date().getDate()),\n      year: new Date().getFullYear(),\n      offsetTop: 0,\n      dialog: false,\n      // duedate:\n    }\n  },\n   computed: {\n    // a computed getter\n    number: function () {\n      var l=0;\n      for (var data in this.spendlist){\n        l+=this.spendlist[data].length\n      }\n\n      return l\n    }\n  },\n  methods: {\n    // addTodo() {\n    //   var value = this.newTodo && this.newTodo.trim();\n    //   if (!value) {\n    //     return;\n    //   }\n    //   this.todos.push({\n    //     title: this.newTodo,\n    //     done: false\n    //   });\n    //   this.newTodo = '';\n    // },\n\n    update(value,index){\n       var data=JSON.parse(localStorage.getItem('moneyspent'));\n       console.log(data);\n       console.log(value);\n\n       data[value.date][index]=value\n    //   console.log(value);\n    // var update=Object.values(this.todolist);\n    // console.log(update);\n    // var combined=[].concat.apply([], update);\n    // console.log(combined)\n\n   \n\n\n    //  var task=update[value.date][index];\n     \n    //  console.log(task);\n    //  task\n    //  console.log(index);\n    //  update[index]=value;\n    // //  console.log(task[index]);\n    //  console.log(  update[index]);\n    //  console.log(update);\n     localStorage.setItem('moneyspent',JSON.stringify(data));\n\n    //  =task[index]\n    },\n    removeTodo(value,index) {\n      // console.log(\"working\")\n      console.log(this.spendlist)\n      var correct=this.spendlist[value.date]\n      console.log(correct);\n      if (Object.keys(this.spendlist).length==1 && correct.length>1){\n        correct.splice(index,1);\n        \n      localStorage.setItem('moneyspent',JSON.stringify(this.spendlist));\n    }\n      // console.log(Object.keys(this.todolist).length);\n      // console.log(correct.length);\n      else if (correct.length==1 && Object.keys(this.spendlist).length==1){\n        console.log('yes');\n        this.spendlist=[];\n        localStorage.removeItem('moneyspent');\n      }\n\n      else if ((Object.keys(this.spendlist).length>1 && correct.length>1)){\n correct.splice(index,1);\n        \n      localStorage.setItem('moneyspent',JSON.stringify(this.spendlist));\n      }\n\n      else if ((Object.keys(this.spendlist).length>1 && correct.length==1)){\n           correct.splice(index,1);\n           delete this.spendlist[value.date];\n      localStorage.setItem('moneyspent',JSON.stringify(this.spendlist));\n      }\n      // var values = Object.keys(this.todolist).map(function (key) { return this.todolist[key]; });\n      // console.log(values);\n      // // console.log(index);\n      // this.todolist.values.splice(index, 1);\n      // console.log(this.todolist);\n     \n     \n    },\n\n    todoDay() {\n      var d = new Date();\n      var days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n      return days[d.getDay()];\n    },\n    todomonth() {\n      var d = new Date();\n     var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      return months[d.getMonth()];\n    }\n    ,\n    nth(d) {\n      if(d>3 && d<21) return 'th';\n      switch (d % 10) {\n        case 1:  return \"st\";\n        case 2:  return \"nd\";\n        case 3:  return \"rd\";\n        default: return \"th\";\n      }\n    },\n     custom_sort(a, b) {\n    return (a.datesort).getTime() - (b.datesort).getTime();\n},\n checkDuplicateInObject(propertyName, inputArray) { var seenDuplicate = false, testObject = {}; inputArray.map(function(item) { var itemPropertyName = item[propertyName]; if (itemPropertyName in testObject) { testObject[itemPropertyName].duplicate = true; item.duplicate = true; seenDuplicate = true; } else { testObject[itemPropertyName] = item; delete item.duplicate; } }); return seenDuplicate; },\n check(date){\n    var counter=0\n    for(var i = 0; i < this.spendlist.length; i++) {\n    if (this.spendlist[i].date == date) {\n      counter=counter+1;\n    }\n    } \n    if (counter==1){\n      return true\n    }\n    return false\n\n },\n  // onScroll (e) {\n  //     this.offsetTop = e.target.scrollTop\n  //   }\n  },\n    mounted() {\n      var get=JSON.parse(localStorage.getItem('moneyspent'));\n      var monthly=JSON.parse(localStorage.getItem('monthlyspending'));\n      console.log(monthly);\n       this.$set(this.$data,\"monthly\",monthly);\n      console.log(get);\n      \n      if (get) {\n\n    var update=Object.values(get);\n    console.log(update);\n    var combined=[].concat.apply([], update);\n        for (var i=0;i<combined.length;i++){\n          var date=combined[i].date.split('-');\n          var d = new Date(date[0],date[1]-1,date[2]);\n          // console.log(d);\n          combined[i].datesort=d;\n        }\n      console.log(Object.keys(combined).length);  \n      if (Object.keys(combined).length>1){\n      combined.sort(this.custom_sort);\n      }\n      console.log(combined)\n      var taskbydate=_.groupBy(combined,\"date\");\n      console.log(taskbydate);\n      this.$set(this.$data,\"spendlist\",taskbydate);\n      // console.log(this.todolist)\n      // this.$set(this.$data,\"output\",localStorage.getItem('event'));\n    // timeinterval = setInterval(() => {\n    //         this.current = Math.trunc((new Date()).getTime() / 1000);\n    //     }, 1000);\n    }\n  //  created() {\n  //           this.id = this.$route.params.id;\n  //           if(this.$route.query.debug) {\n  //               this.debug = this.$route.query.debug;\n  //           }\n  //  }\n}\n}\n</script>\n<style scoped>\n.done {\n  text-decoration: line-through;\n}\n#movebutton {\n  text-align: center;\n}\nform {\n  height: 200px;\n}\n.centername {\n  text-align: center;\n}\n#spendingbutton {\n  color: white;\n}\n\n#header {\n  font-size: 17px;\n}\n\n#moveover {\n  margin-left: 2.5%;\n}\n\n.moveman {\n  margin-left: 5%;\n}\n\n/* #padding {\n  padding: 5px;\n} */\n</style>"]}]}