{"remainingRequest":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jungwonshin/Downloads/git-and-tonic-project/src/components/page1.vue?vue&type=style&index=0&id=ad27aabc&scoped=true&lang=css&","dependencies":[{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/src/components/page1.vue","mtime":1552400976000},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/css-loader/index.js","mtime":499162500000},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/postcss-loader/lib/index.js","mtime":499162500000},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/vuetify-loader/lib/loader.js","mtime":1539688874000},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/cache-loader/dist/cjs.js","mtime":1593141034110},{"path":"/Users/jungwonshin/Downloads/git-and-tonic-project/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":["\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\n.inputPrice input[type='number'] {\n    -moz-appearance:textfield;\n}\n.inputPrice input::-webkit-outer-spin-button,\n.inputPrice input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n}\n.centername {\n  text-align: center;\n}\n\n.submit_button {\n  padding: 10px;\n}\n\n",{"version":3,"sources":["page1.vue"],"names":[],"mappingss3BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA","file":"page1.vue","sourceRoot":"src/components","sourcesContent":["<template>\n<div id=\"app\">\n  <v-app>\n    <v-content>\n      <v-container>\n          <!-- <router-link :to=\"{ name: 'main', params: { todolist: this.$data.todos }}\">Navigate to Page2</router-link> -->\n        <v-layout row class=\"mt-3\">\n          <v-flex xs12 sm6 offset-sm3>\n            <!-- <v-flex> -->\n            <v-card white>\n              <v-toolbar color=\"white\">\n                <!-- <v-toolbar-side-icon></v-toolbar-side-icon> -->\n                <v-flex class=\"centername\">\n                <v-toolbar-title id=\"appname\" class=\"headline\">Tracker</v-toolbar-title>\n                </v-flex>\n              </v-toolbar>\n              <v-toolbar color=\"blue darken-4\">\n                <!-- <v-toolbar-side-icon></v-toolbar-side-icon> -->\n                <v-flex class=\"centername\">\n                <v-toolbar-title class=\"headline white--text\">{{day}}, {{month}} {{date}}{{ord}}</v-toolbar-title>\n                </v-flex>\n              </v-toolbar>\n              <v-divider></v-divider>\n              <!-- <v-list two-line subheader> -->\n                <v-container>\n                  <form>\n                      <v-flex>\n        <v-select\n          :items=\"cat_items\"\n          label=\"Category\"\n          v-model=\"selectedcategory\"\n        ></v-select>\n      </v-flex>\n <v-flex  v-if=\"selectedcategory =='Set Monthly Spending Goal'\">\n          <v-select\n          :items=\"months\"\n          label=\"Month\"\n          v-model=\"selectedmonth\"\n        ></v-select>\n\n        </v-flex>\n\n               <v-flex v-if=\"selectedcategory =='Add New Category'\" xs12>\n                <v-text-field\n                    v-model=\"newCategory\" label=\"Enter New Category\">\n                  </v-text-field>\n                  </v-flex>\n                   <!-- <v-layout  row class=\"mt-3\">  -->\n                  <!-- <v-subheader class=\"headline\">{{day}}, {{month}} {{date}}{{ord}}</v-subheader> -->\n                  <!-- <p class=\"text-xs-right\"><b>{{todos.length}}</b> Tasks</p> -->\n                  <v-flex v-if=\"selectedcategory !='Set Monthly Spending Goal'\">\n                    <v-text-field clearable color=\"blue darken-2\" v-model=\"newTodo\" id=\"newTodo\" name=\"newTodo\" label=\"Type your task\">\n                    </v-text-field>\n                  </v-flex>\n                <v-flex v-if=\"selectedcategory =='Set Monthly Spending Goal'\">\n                  <v-text-field\n                    type=\"number\"\n                    class=\"inputPrice\"\n                    value=\"5\"\n                  label=\"Monthly Spending Goal\"\n                  v-model=\"newSpend\"\n                    >\n      </v-text-field>\n      </v-flex>\n\n       <!-- <v-flex v-if=\"selectedcategory =='Add New Category'\">\n                <v-text-field\n                    solo >\n                  </v-text-field>\n                  </v-flex> -->\n                  \n                  <!-- <v-flex v-if=\"selectedcategory !='Spending'\" xs12>\n                    <v-text-field clearable color=\"white\" v-model=\"newTodo\" id=\"newTodo\" name=\"newTodo\" label=\"Type your task\">\n                    </v-text-field>\n                  </v-flex> -->\n\n                  <!-- <v-flex v-else-if=\"selectedcategory !='Add New Category'||'Spending'\" >\n                    <v-text-field clearable color=\"white\" v-model=\"newTodo\" id=\"newTodo\" name=\"newTodo\" label=\"Type your task\">\n                    </v-text-field>\n                  </v-flex> -->\n                   <!-- </v-layout> -->\n        <!-- <v-flex> -->\n          <!-- <v-text-field\n              label=\"Event Title\"\n            ></v-text-field>\n        </v-flex> -->\n\n      <!-- <v-flex xs12 >\n        <v-select\n          :items=\"metric_items\"\n          label=\"Metric\"\n          v-model=\"selectedmetric\"\n        ></v-select>\n      </v-flex> -->\n       <v-flex v-if=\"selectedcategory != 'Set Monthly Spending Goal' && selectedcategory!='Academics' && selectedcategory!='Add New Category'\">\n        <v-select\n          :items=\"repeat_items\"\n          label=\"Repeat (Required for Medicine)\"\n          v-model=\"selectedrepeated\"\n        ></v-select>\n      </v-flex>\n   <v-flex v-if=\"selectedcategory != 'Set Monthly Spending Goal'\">\n        <v-menu\n          :close-on-content-click=\"false\"\n          v-model=\"menu2\"\n          :nudge-right=\"40\"\n          lazy\n          transition=\"scale-transition\"\n          offset-y\n          full-width\n          min-width=\"290px\"\n        >\n          <v-text-field\n            slot=\"activator\"\n            v-model=\"date1\"\n            label=\"Date\"\n            prepend-icon=\"event\"\n            readonly\n          ></v-text-field>\n          <v-date-picker v-model=\"date1\" @input=\"menu2 = false\"></v-date-picker>\n        </v-menu>\n      </v-flex>\n <v-flex v-if=\"selectedrepeated == 'Daily' && selectedcategory == 'Medicine' \" >\n        <v-menu\n          :close-on-content-click=\"false\"\n          v-model=\"menu4\"\n          :nudge-right=\"40\"\n          lazy\n          transition=\"scale-transition\"\n          offset-y\n          full-width\n          min-width=\"290px\"\n        >\n          <v-text-field\n            slot=\"activator\"\n            v-model=\"enddate\"\n            label=\"End Date of Daily Repeat Range\"\n            prepend-icon=\"event\"\n            readonly\n          ></v-text-field>\n          <v-date-picker v-model=\"enddate\" @input=\"menu4 = false\"></v-date-picker>\n        </v-menu>\n      </v-flex>\n\n      <!-- <template> -->\n<!--         \n    <v-flex v-if=\"selectedcategory == 'Medicine'\" xs12>\n    <v-daterange v-model=\"daterange\"   :options=\"dateRangeOptions\" @input=\"onDateRangeChange\"></v-daterange>\n    </v-flex> -->\n<!-- </template> -->\n\n\n    <v-flex v-if=\"selectedcategory != 'Set Monthly Spending Goal'\">\n        <v-menu\n          ref=\"menu\"\n          :close-on-content-click=\"false\"\n          v-model=\"menu3\"\n          :nudge-right=\"40\"\n          :return-value.sync=\"time\"\n          lazy\n          transition=\"scale-transition\"\n          offset-y\n          full-width\n          max-width=\"290px\"\n          min-width=\"290px\"\n        >\n          <v-text-field\n            slot=\"activator\"\n            v-model=\"time\"\n            label=\"Time\"\n            prepend-icon=\"access_time\"\n            readonly\n          ></v-text-field>\n          <v-time-picker\n            v-if=\"menu3\"\n            v-model=\"time\"\n            full-width\n            @change=\"$refs.menu.save(time)\"\n          ></v-time-picker>\n        </v-menu>\n      </v-flex>\n\n <v-textarea\n          v-model=\"details\"\n          auto-grow\n          box\n          color=\"blue darken-2\"\n          label=\"Description\"\n          rows=\"1\"\n           v-if=\"selectedcategory != 'Set Monthly Spending Goal'\"\n  ></v-textarea>\n\n      <v-card-actions>\n        <v-spacer></v-spacer>        \n        <!-- <v-btn \n          flat outline\n          @click=\"this.$refs.form.reset()\"\n        >\n          Clear\n        </v-btn> -->\n        \n    \n         <v-dialog v-model=\"dialog\" persistent max-width=\"290\">\n        <v-btn  id=\"submit_button\" v-if=\"selectedcategory == 'Medicine' && selectedrepeated == 'Daily' \" color=\"blue darken-4\" @click=\"medicine\" slot=\"activator\" dark>Submit</v-btn>\n          <v-btn  class=\"submit_button\" v-if=\"selectedcategory == 'Medicine' && selectedrepeated == 'None' \" color=\"blue darken-4\" @click=\"addTodo\" slot=\"activator\" dark>Submit</v-btn>\n          <v-btn  class=\"submit_button\" v-if=\"selectedcategory != 'Medicine' && selectedcategory != 'Set Monthly Spending Goal' \" color=\"blue darken-4\" @click=\"addTodo\" slot=\"activator\" dark>Submit</v-btn>\n          <v-btn  v-if=\"selectedcategory == 'Set Monthly Spending Goal'\" color=\"blue darken-4\" @click=\"changegoal\" slot=\"activator\" dark>Submit</v-btn>\n        <v-card>\n          <v-card-title class=\"headline\">Success</v-card-title>\n          <v-card-text>You've added a new task or goal! To see it, check out the home or spending screen. </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <router-link to=\"/page1\"> <v-btn color=\"green darken-1\" flat @click.native=\"dialog = false\">New Task</v-btn></router-link>\n            <router-link to=\"/spending\"> <v-btn color=\"green darken-1\" flat @click.native=\"dialog = false\">Spending</v-btn></router-link>\n            <router-link to=\"/\"> <v-btn color=\"green darken-1\" flat @click.native=\"dialog = false\">Home</v-btn></router-link>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n   \n\n    <!-- <v-dialog v-model=\"dialog\" persistent max-width=\"290\">\n        <v-btn  class=\"submit_button\" v-if=\"selectedrepeated == 'None'\" color=\"blue darken-4\" @click=\"addTodo\" slot=\"activator\" dark>Submit</v-btn>\n        <v-card>\n          <v-card-title class=\"headline\">Success</v-card-title>\n          <v-card-text>You've added a new task or goal! To see it, check out the home screen. </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <router-link to=\"/page1\"> <v-btn color=\"green darken-1\" flat @click.native=\"dialog = false\">New Task</v-btn></router-link>\n            <router-link to=\"/\"> <v-btn color=\"green darken-1\" flat @click.native=\"dialog = false\">Home</v-btn></router-link>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n\n    \n    <v-dialog v-model=\"dialog\" persistent max-width=\"290\">\n        <v-btn  class=\"submit_button\" v-if=\"selectedrepeated == 'Daily'\" color=\"blue darken-4\" @click=\"medicine\" slot=\"activator\" dark>Submit</v-btn>\n        <v-card>\n          <v-card-title class=\"headline\">Success</v-card-title>\n          <v-card-text>You've added a new task or goal! To see it, check out the home screen. </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <router-link to=\"/page1\"> <v-btn color=\"green darken-1\" flat @click.native=\"dialog = false\">New Task</v-btn></router-link>\n            <router-link to=\"/\"> <v-btn color=\"green darken-1\" flat @click.native=\"dialog = false\">Home</v-btn></router-link>\n          </v-card-actions>\n        </v-card>\n      </v-dialog>\n\n  \n    \n         <v-dialog v-model=\"dialog\" persistent max-width=\"290\">\n        <v-btn  v-if=\"selectedcategory == 'Set Monthly Spending Goal'\" color=\"blue darken-4\" @click=\"changegoal\" slot=\"activator\" dark>Submit</v-btn>\n        <v-card>\n          <v-card-title class=\"headline\">Success</v-card-title>\n          <v-card-text>You've added a new task or goal! To see it, check out the home screen. </v-card-text>\n          <v-card-actions>\n            <v-spacer></v-spacer>\n            <router-link to=\"/page1\"> <v-btn color=\"green darken-1\" flat @click.native=\"dialog = false\">New Task</v-btn></router-link>\n            <router-link to=\"/\"> <v-btn color=\"green darken-1\" flat @click.native=\"dialog = false\">Home</v-btn></router-link>\n          </v-card-actions>\n          \n        </v-card>\n      </v-dialog> -->\n      \n      </v-card-actions>\n    </form>\n</v-container>\n\n     <v-bottom-nav >\n      <v-btn :to=\"{name: 'main'}\">\n        <span>Home</span>\n        <v-icon>home</v-icon>\n      </v-btn>\n      \n      <v-btn :to=\"{name: 'page1'}\">\n        <span>Tasks</span>\n        <v-icon>add</v-icon>\n      </v-btn>\n \n      <v-btn :to=\"{name: 'spending'}\">\n        <span>Spending</span>\n        <v-icon>attach_money</v-icon>\n      </v-btn>\n\n      <v-btn :to=\"{name: 'analytics'}\">\n        <span>Analytics</span>\n        <v-icon>bar_chart</v-icon>\n      </v-btn>\n  </v-bottom-nav>\n            </v-card>\n          </v-flex>\n        </v-layout>\n      </v-container>\n    </v-content>\n  </v-app>\n</div>\n</template>\n\n\n<script>\nimport { format, formatDistance, formatRelative, subDays } from 'date-fns'\nexport default {\n  name: 'page1',\n  data () {\n    return{\n    // cat_items: ['Add New Category','Academics', 'Spending', 'Medicine'],\n    cat_items:[],\n    months:['January', 'February', 'March', 'April',\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],\n    metric_items: ['Dollars', 'Homework', 'Exam', 'Pills', 'Add New Metric'],\n    repeat_items: ['None', 'Daily'],\n     newTodo: '',\n     details:'',\n      todo: [],\n      todos: [],\n      moneygoal:{},\n      day: this.todoDay(),\n      month:this.todomonth(),\n      date: new Date().getDate(),\n      ord: this.nth(new Date().getDate()),\n      year: new Date().getFullYear(),\n       date1: new Date().toISOString().substr(0, 10),\n    menu: false,\n    dialog: false,\n    modal: false,\n    menu2: false,\n     time: null,\n      menu3: false,\n      menu4: false,\n      modal2: false,\n      resultdict:{},\n      daterange:'',\n      selectedmetric:'',\n      selectedcategory:'',\n      selectedmonth:'',\n      selectedrepeated:'',\n      money:0,\n      range: [],\n      newSpend: '',\n      enddate:new Date().toISOString().substr(0, 10),\n      dateRangeOptions: {\n        startDate: format(subDays(new Date(), 7), 'YYYY-MM-DD'),\n        endDate: format(new Date(), 'YYYY-MM-DD'),\n        maxDate:'2050-12-31',\n        format: 'MM/DD/YYYY',\n        presets: [\n          {\n            label: 'Today',\n            range: [\n              format(new Date(), 'YYYY-MM-DD'),\n              format(new Date(), 'YYYY-MM-DD'),\n            ],\n          },\n          {\n            label: 'Yesterday',\n            range: [\n              format(subDays(new Date(), 1), 'YYYY-MM-DD'),\n              format(subDays(new Date(), 1), 'YYYY-MM-DD'),\n            ],\n          },\n          {\n            label: 'Last 30 Days',\n            range: [\n              format(subDays(new Date(), 30), 'YYYY-MM-DD'),\n              format(subDays(new Date(), 1), 'YYYY-MM-DD'),\n            ],\n          },\n        ],\n      },\n      newCategory: '',\n      // datamonth:this.createmonth()\n\n\n\n      // date1:''\n    }\n  },\n    methods: {\n      medicine(){\n      console.log('medicine');\n      if (JSON.parse(localStorage.getItem('todojson'))){\n      console.log('yes');\n      this.resultdict=JSON.parse(localStorage.getItem('todojson'));\n      console.log(this.resultdict);\n      console.log(this.date1);\n      var difference=this.diffdays(this.date1,this.enddate);\n      console.log(difference);\n      if (this.resultdict.hasOwnProperty(this.date1)) {\n        console.log(this.selectedcategory);\n          // this.cat_items.push(this.newCategory);\n          //  this.$set(this.$data, 'cat_items', this.cat_items);\n          //  localStorage.setItem('cat_items', JSON.stringify(this.cat_items));\n          //  console.log('newcategory');\n        // console.log(this.cat_items);\n           this.resultdict[this.date1].push({\n           title: this.newTodo,\n        details:this.details,\n        date:this.date1,\n        time:this.time,\n        done: false,\n        metric:this.selectedmetric,\n        category: this.selectedcategory,\n        repeated:this.selectedrepeated,\n        enddate:this.enddate,\n        money:this.money,\n        spend_goal: this.newSpend,\n        // month:this.datamonth\n      \n\n        })\n         var split=this.date1.split('-')\n        var repeat = new Date(split[0],split[1]-1,split[2]);\n          for (var i = 0;i<difference;i++){\n          console.log('d');\n       \n        // console.log(this.resultdict);\n        repeat.setDate(repeat.getDate() + 1);\n\n        var y = repeat.getFullYear(),\n    m = repeat.getMonth() + 1, // january is month 0 in javascript\n    d = repeat.getDate();\nvar pad = function(val) { var str = val.toString(); return (str.length < 2) ? \"0\" + str : str};\n var dateString = [y, pad(m), pad(d)].join(\"-\");\n        console.log(dateString);\n        if (!this.resultdict.hasOwnProperty(dateString)){\n             this.resultdict[dateString]=[];\n    \n     \n        this.resultdict[dateString].push({\n        title: this.newTodo,\n        details:this.details,\n        date:dateString,\n        time:this.time,\n        done: false,\n        metric:this.selectedmetric,\n        category: this.selectedcategory,\n        repeated:this.selectedrepeated,\n        enddate:this.enddate,\n        money:this.money,\n        spend_goal: this.newSpend\n        // month:this.datamonth\n     \n\n        })\n            }\n          \n\n            else{\n   this.resultdict[dateString].push({\n        title: this.newTodo,\n        details:this.details,\n        date:dateString,\n        time:this.time,\n        done: false,\n        metric:this.selectedmetric,\n        category: this.selectedcategory,\n        repeated:this.selectedrepeated,\n        enddate:this.enddate,\n        money:this.money,\n        spend_goal: this.newSpend\n        // month:this.datamonth\n     \n\n        })\n            }\n            \n      }\n      \n      }\n\n           else if (!this.resultdict.hasOwnProperty(this.date1)){\n\n\n              this.resultdict[this.date1]=[];\n              this.resultdict[this.date1].push({\n           title: this.newTodo,\n        details:this.details,\n        date:this.date1,\n        time:this.time,\n        done: false,\n        metric:this.selectedmetric,\n        category: this.selectedcategory,\n        repeated:this.selectedrepeated,\n        enddate:this.enddate,\n        money:this.money,\n        spend_goal: this.newSpend\n              });\n             var split=this.date1.split('-')\n        var repeat = new Date(split[0],split[1]-1,split[2]);\n          for (var i = 0;i<difference;i++){\n          console.log('d');\n       \n        // console.log(this.resultdict);\n        repeat.setDate(repeat.getDate() + 1);\n\n        var y = repeat.getFullYear(),\n    m = repeat.getMonth() + 1, // january is month 0 in javascript\n    d = repeat.getDate();\nvar pad = function(val) { var str = val.toString(); return (str.length < 2) ? \"0\" + str : str};\n var dateString = [y, pad(m), pad(d)].join(\"-\");\n        console.log(dateString);\n        console.log(this.resultdict);\n        if (!this.resultdict.hasOwnProperty(dateString)){\n             this.resultdict[dateString]=[];\n    \n     \n        this.resultdict[dateString].push({\n        title: this.newTodo,\n        details:this.details,\n        date:dateString,\n        time:this.time,\n        done: false,\n        metric:this.selectedmetric,\n        category: this.selectedcategory,\n        repeated:this.selectedrepeated,\n        enddate:this.enddate,\n        money:this.money,\n        spend_goal: this.newSpend\n        // month:this.datamonth\n     \n\n        })\n            }\n\n            else{\n   this.resultdict[dateString].push({\n        title: this.newTodo,\n        details:this.details,\n        date:dateString,\n        time:this.time,\n        done: false,\n        metric:this.selectedmetric,\n        category: this.selectedcategory,\n        repeated:this.selectedrepeated,\n        enddate:this.enddate,\n        money:this.money,\n        spend_goal: this.newSpend\n        // month:this.datamonth\n     \n\n        })\n            }\n             }\n                }\n           \n      \n            }\n      // console.log(this.todos);\n\n\n     \n\n      else{\n        console.log('repeat');\n        var split=this.date1.split('-')\n        var repeat = new Date(split[0],split[1]-1,split[2]);\n        var difference=this.diffdays(this.date1,this.enddate);\n          for (var i = 0;i<difference;i++){\n          console.log('d');\n       \n        // console.log(this.resultdict);\n        repeat.setDate(repeat.getDate() + 1);\n\n        var y = repeat.getFullYear(),\n    m = repeat.getMonth() + 1, // january is month 0 in javascript\n    d = repeat.getDate();\nvar pad = function(val) { var str = val.toString(); return (str.length < 2) ? \"0\" + str : str};\n var dateString = [y, pad(m), pad(d)].join(\"-\");\n        console.log(dateString);\n        this.resultdict[dateString]=[];\n        this.resultdict[dateString].push({\n        title: this.newTodo,\n        details:this.details,\n        date:dateString,\n        time:this.time,\n        done: false,\n        metric:this.selectedmetric,\n        category: this.selectedcategory,\n        repeated:this.selectedrepeated,\n        enddate:this.enddate,\n        money:this.money,\n        spend_goal: this.newSpend,\n\n      })\n      \n          \n      }\n      }\n      this.resultdict=JSON.stringify(this.resultdict);\n      localStorage.setItem('todojson',this.resultdict);\n\n      \n      this.newTodo = '';\n      this.details = '';\n      this.date1='';\n      this.time='';\n      this.done='';\n      this.selectedmetric='';\n      this.selectedcategory='';\n      this.selectedrepeated='';\n      },\n      //  this.money='';,\n      diffdays(startdate,enddate){\n      var splita=startdate.split('-');\n      var splitb=enddate.split('-');\n      var datea = new Date(splita[0],splita[1]-1,splita[2]);\n      var dateb = new Date(splitb[0],splitb[1]-1,splitb[2]);\n      \n\n      var timeDiff = Math.abs(datea.getTime() - dateb.getTime());\n      var diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24)); \n\n      return diffDays;\n      },\n\n\n\n    changegoal() {\n\n      // localStorage.removeItem('monthlyspending');\n      // var get=JSON.parse(localStorage.getItem('todojson'));\n      // console.log(get);\n      if (JSON.parse(localStorage.getItem('monthlyspending'))){\n      this.moneygoal=JSON.parse(localStorage.getItem('monthlyspending'));\n      console.log(this.moneygoal);\n\n      if (this.moneygoal.hasOwnProperty(this.selectedmonth)){\n      this.moneygoal[this.selectedmonth]={\n         done: false,\n        category:this.selectedcategory,\n        month:this.selectedmonth,\n        spend_goal: this.newSpend\n      };}\n\n        else if (!this.moneygoal.hasOwnProperty(this.selectedmonth)){\n          // this.moneygoal[this.selectedmonth]=[];\n      this.moneygoal[this.selectedmonth]={\n         done: false,\n        category:this.selectedcategory,\n        month:this.selectedmonth,\n        spend_goal: this.newSpend\n      };}\n      }\n      else{\n        //  this.todos=get;\n      console.log('yes');\n      //  this.moneygoal[this.selectedmonth]=[];\n      //  console.log(this.selectedmonth);\n      this.moneygoal[this.selectedmonth]={\n        done: false,\n        category:this.selectedcategory,\n        month:this.selectedmonth,\n        spend_goal: this.newSpend\n      };}\n      console.log(this.moneygoal);\n      this.moneygoal=JSON.stringify(this.moneygoal);\n      console.log(this.moneygoal);\n      localStorage.setItem('monthlyspending',this.moneygoal);\n\n      \n      this.selectedcategory = '';\n      this.selectedmonth = '';\n      this.newSpend='';\n  \n    },\n\n        addTodo() {\n    \n      // localStorage.removeItem('todojson');\n      // var get=JSON.parse(localStorage.getItem('todojson'));\n      // console.log(get);\n      console.log(this.enddate);\n      if (JSON.parse(localStorage.getItem('todojson'))){\n      this.resultdict=JSON.parse(localStorage.getItem('todojson'));\n      console.log(this.resultdict);\n      console.log(this.date1);\n\n      if (this.resultdict.hasOwnProperty(this.date1) && this.selectedcategory == 'Add New Category') {\n        \n          this.cat_items.push(this.newCategory);\n          //  this.$set(this.$data, 'cat_items', this.cat_items);\n           localStorage.setItem('cat_items', JSON.stringify(this.cat_items));\n           console.log('newcategory');\n        console.log(this.cat_items);\n           this.resultdict[this.date1].push({\n           title: this.newTodo,\n        details:this.details,\n        date:this.date1,\n        time:this.time,\n        done: false,\n        metric:this.selectedmetric,\n        category: this.newCategory,\n        repeated:this.selectedrepeated,\n        money:this.money,\n        spend_goal: this.newSpend,\n        // month:this.datamonth\n        \n        })\n      }\n      if (this.resultdict.hasOwnProperty(this.date1) && this.selectedcategory != 'Add New Category'){\n        this.resultdict[this.date1].push({\n           title: this.newTodo,\n        details:this.details,\n        date:this.date1,\n        time:this.time,\n        \n        done: false,\n        metric:this.selectedmetric,\n        category:this.selectedcategory,\n        repeated:this.selectedrepeated,\n        money:this.money,\n        spend_goal: this.newSpend,\n        // month:this.datamonth\n        })\n      }\n      else if (!this.resultdict.hasOwnProperty(this.date1) && this.selectedcategory != 'Add New Category'){\n        console.log(\"else\");\n        console.log(this.resultdict);\n        console.log(this.date1);\n\n          this.resultdict[this.date1]=[];\nthis.resultdict[this.date1].push({\n        title: this.newTodo,\n        details:this.details,\n        date:this.date1,\n        time:this.time,\n        done: false,\n        metric:this.selectedmetric,\n        category:this.selectedcategory,\n        repeated:this.selectedrepeated,\n        money:this.money,\n        spend_goal: this.newSpend,\n        // month:this.datamonth\n        })\n      }\n       \n\n      else if (!this.resultdict.hasOwnProperty(this.date1) && this.selectedcategory == 'Add New Category'){\n        console.log(\"else\");\n        console.log(this.resultdict);\n        console.log(this.date1);\n        this.cat_items.push(this.newCategory);\n        console.log(this.cat_items);\n        localStorage.setItem('cat_items', JSON.stringify(this.cat_items));\n          //  this.$set(this.$data, 'cat_items', this.cat_items);\n          this.resultdict[this.date1]=[];\nthis.resultdict[this.date1].push({\n        title: this.newTodo,\n        details:this.details,\n        date:this.date1,\n        time:this.time,\n        done: false,\n        metric:this.selectedmetric,\n        category:this.newCategory,\n        repeated:this.selectedrepeated,\n        money:this.money,\n        spend_goal: this.newSpend,\n        // month:this.datamonth\n        })\n      }\n\n            }\n        else if (this.selectedcategory == 'Add New Category') {\n        console.log(\"else\");\n        console.log(this.resultdict);\n        console.log(this.date1);\n        this.cat_items.push(this.newCategory);\n        console.log(this.cat_items);\n          //  this.$set(this.$data, 'cat_items', this.cat_items);\n          localStorage.setItem('cat_items', JSON.stringify(this.cat_items));\n\n          this.resultdict[this.date1]=[];\nthis.resultdict[this.date1].push({\n        title: this.newTodo,\n        details:this.details,\n        date:this.date1,\n        time:this.time,\n        done: false,\n        metric:this.selectedmetric,\n        category:this.newCategory,\n        repeated:this.selectedrepeated,\n        money:this.money,\n        spend_goal: this.newSpend,\n        // month:this.datamonth\n        })\n      }\n       \n      \n      else if (this.selectedcategory != 'Add New Category'){\n        //  this.todos=get;\n      console.log('yes');\n      console.log(this.resultdict);\n      console.log(this.date1);\n      this.resultdict[this.date1]=[];\n      this.resultdict[this.date1].push({\n        title: this.newTodo,\n        details:this.details,\n        date:this.date1,\n        time:this.time,\n        done: false,\n        metric:this.selectedmetric,\n        category:this.selectedcategory,\n        repeated:this.selectedrepeated,\n        money:this.money,\n        spend_goal: this.newSpend,\n        // month:this.datamonth\n        \n      });\n      }\n      // console.log(this.todos);\n      this.resultdict=JSON.stringify(this.resultdict);\n      localStorage.setItem('todojson',this.resultdict);\n\n      \n      this.newTodo = '';\n      this.details = '';\n      this.date1='';\n      this.time='';\n      this.done='';\n      this.selectedmetric='';\n      this.selectedcategory='';\n      this.selectedrepeated='';\n      //  this.money='';\n\n    },\n    removeTodo(index) {\n      this.todos.splice(index, 1);\n    },\n    todoDay() {\n      var d = new Date();\n      var days = [\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"];\n      return days[d.getDay()];\n    },\n    todomonth() {\n      var d = new Date();\n     var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      return months[d.getMonth()];\n    }\n    ,\n    nth(d) {\n      if(d>3 && d<21) return 'th';\n      switch (d % 10) {\n        case 1:  return \"st\";\n        case 2:  return \"nd\";\n        case 3:  return \"rd\";\n        default: return \"th\";\n      }\n    },\n    createmonth() {\n      // var d = this.date1;\n           var months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n      console.log(this.date1);\n      var date=this.date1.split('-');\n      var d = new Date(date[0],date[1]-1,date[2]);\n    // //       // console.log(d);\n      // data[i].month=\n      return months[d.getMonth()];\n    },\n    onDateRangeChange(range) {\n      this.range = range;\n    }\n  },\n  mounted (){\n    // ['Add New Category','Academics', 'Spending', 'Medicine'],\n    // localStorage.removeItem('cat_items');\n    if (localStorage.getItem('cat_items') === null){\n      var cat_items = ['Add New Category','Academics', 'Set Monthly Spending Goal', 'Medicine'];\n      localStorage.setItem('cat_items', JSON.stringify(cat_items));\n      // this.cat_items = localStorage.cat_items;\n      this.cat_items = JSON.parse(localStorage.getItem(\"cat_items\"));\n      console.log(this.cat_items);\n      }\n    else {\n      // localStorage.setItem('cat_items', JSON.stringify(cat_items));\n      // this.cat_items = localStorage.cat_items;\n      this.cat_items = JSON.parse(localStorage.getItem(\"cat_items\"));\n      console.log(this.cat_items);\n      }\n\n\n  }\n}\n\n\n</script>\n\n<!-- Add \"scoped\" attribute to limit CSS to this component only -->\n<style scoped>\nh3 {\n  margin: 40px 0 0;\n}\nul {\n  list-style-type: none;\n  padding: 0;\n}\nli {\n  display: inline-block;\n  margin: 0 10px;\n}\na {\n  color: #42b983;\n}\n\n.inputPrice input[type='number'] {\n    -moz-appearance:textfield;\n}\n.inputPrice input::-webkit-outer-spin-button,\n.inputPrice input::-webkit-inner-spin-button {\n    -webkit-appearance: none;\n}\n.centername {\n  text-align: center;\n}\n\n.submit_button {\n  padding: 10px;\n}\n\n</style>"]}]}